import{_ as o,o as r,c,a,t as s,d as t,e as n}from"./app.fbc72659.js";const p={},l={id:"frontmatter-title-for-database",tabindex:"-1"},i=a("a",{class:"header-anchor",href:"#frontmatter-title-for-database","aria-hidden":"true"},"#",-1),d=t(),h=t(" for database"),u={style:{"white-space":"pre-wrap","margin-top":"10px"}},f=n(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; collect </code></p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Collect from a select query</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">open</span> foo.db <span class="token operator">|</span> from table table_1 db <span class="token operator">|</span> <span class="token keyword">select</span> a <span class="token operator">|</span> collect
</code></pre></div>`,5),m={id:"frontmatter-title-for-filters",tabindex:"-1"},_=a("a",{class:"header-anchor",href:"#frontmatter-title-for-filters","aria-hidden":"true"},"#",-1),k=t(),b=t(" for filters"),g={style:{"white-space":"pre-wrap","margin-top":"10px"}},x=n(`<h2 id="signature-1" tabindex="-1"><a class="header-anchor" href="#signature-1" aria-hidden="true">#</a> Signature</h2><p><code>&gt; collect (block)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>block</code>: the block to run once the stream is collected</li></ul><h2 id="examples-1" tabindex="-1"><a class="header-anchor" href="#examples-1" aria-hidden="true">#</a> Examples</h2><p>Use the second value in the stream</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token operator">|</span> collect <span class="token punctuation">{</span> <span class="token operator">|</span>x<span class="token operator">|</span> <span class="token builtin class-name">echo</span> <span class="token variable">$x</span>.1 <span class="token punctuation">}</span>
</code></pre></div>`,7),v={id:"frontmatter-title-for-lazyframe",tabindex:"-1"},y=a("a",{class:"header-anchor",href:"#frontmatter-title-for-lazyframe","aria-hidden":"true"},"#",-1),w=t(),$=t(" for lazyframe"),z={style:{"white-space":"pre-wrap","margin-top":"10px"}},S=n(`<h2 id="signature-2" tabindex="-1"><a class="header-anchor" href="#signature-2" aria-hidden="true">#</a> Signature</h2><p><code>&gt; collect </code></p><h2 id="examples-2" tabindex="-1"><a class="header-anchor" href="#examples-2" aria-hidden="true">#</a> Examples</h2><p>drop duplicates</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>a b<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> into lazy <span class="token operator">|</span> collect
</code></pre></div>`,5);function E(e,B){return r(),c("div",null,[a("h1",l,[i,d,a("code",null,s(e.$frontmatter.title),1),h]),a("div",u,s(e.$frontmatter.database),1),f,a("h1",m,[_,k,a("code",null,s(e.$frontmatter.title),1),b]),a("div",g,s(e.$frontmatter.filters),1),x,a("h1",v,[y,w,a("code",null,s(e.$frontmatter.title),1),$]),a("div",z,s(e.$frontmatter.lazyframe),1),S])}const V=o(p,[["render",E],["__file","collect.html.vue"]]);export{V as default};
