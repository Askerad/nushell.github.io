import{_ as t,o as s,c as n,a as e,t as r,d as o,e as i}from"./app.6670dc1a.js";const c={},l=e("h1",{id:"frontmatter-title",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#"),o(),e("code",null,"{{ $frontmatter.title }}")],-1),p={style:{"white-space":"pre-wrap"}},d=i(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; take until (predicate)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>predicate</code>: the predicate that element(s) must not match</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Take until the element is positive</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token punctuation">[</span>-1 -2 <span class="token number">9</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">|</span> take <span class="token keyword">until</span> <span class="token variable">$it</span> <span class="token operator">&gt;</span> <span class="token number">0</span>
</code></pre></div>`,7);function h(a,u){return s(),n("div",null,[l,e("div",p,r(a.$frontmatter.usage),1),d])}var k=t(c,[["render",h],["__file","take_until.html.vue"]]);export{k as default};
