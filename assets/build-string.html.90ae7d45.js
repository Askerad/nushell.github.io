import{_ as s,o as t,c as n,a,t as r,d as i,e as o}from"./app.6670dc1a.js";const l={},c=a("h1",{id:"frontmatter-title",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#"),i(),a("code",null,"{{ $frontmatter.title }}")],-1),d={style:{"white-space":"pre-wrap"}},p=o(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; build-string ...rest</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: list of string</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Builds a string from letters a b c</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> build-string a b c
</code></pre></div><p>Builds a string from letters a b c</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> build-string <span class="token punctuation">(</span><span class="token number">1</span> + <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> one <span class="token string">&#39; &#39;</span> plus <span class="token string">&#39; &#39;</span> two
</code></pre></div>`,9);function h(e,u){return t(),n("div",null,[c,a("div",d,r(e.$frontmatter.usage),1),p])}var m=s(l,[["render",h],["__file","build-string.html.vue"]]);export{m as default};
