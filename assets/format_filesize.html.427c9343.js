import{_ as t,o as s,c as r,a as e,t as n,d as o,e as i}from"./app.6670dc1a.js";const c={},l=e("h1",{id:"frontmatter-title",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#"),o(),e("code",null,"{{ $frontmatter.title }}")],-1),d={style:{"white-space":"pre-wrap"}},p=i(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; format filesize (field) (format value)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>field</code>: the name of the column to update</li><li><code>format value</code>: the format into which convert the filesizes</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Convert the size row to KB</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">ls</span> <span class="token operator">|</span> <span class="token function">format</span> filesize size KB
</code></pre></div><p>Convert the apparent row to B</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">du</span> <span class="token operator">|</span> <span class="token function">format</span> filesize apparent B
</code></pre></div>`,9);function h(a,f){return s(),r("div",null,[l,e("div",d,n(a.$frontmatter.usage),1),p])}var m=t(c,[["render",h],["__file","format_filesize.html.vue"]]);export{m as default};
