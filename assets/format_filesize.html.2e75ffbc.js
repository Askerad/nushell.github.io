import{_ as n,o,c as r,a as e,t,d as s,e as i}from"./app.f7bc99d6.js";const c={},l={id:"frontmatter-title-for-strings",tabindex:"-1"},d=e("a",{class:"header-anchor",href:"#frontmatter-title-for-strings","aria-hidden":"true"},"#",-1),h=s(),p=s(" for strings"),f={class:"command-title"},m=i(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; format filesize (field) (format value)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>field</code>: the name of the column to update</li><li><code>format value</code>: the format into which convert the filesizes</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Convert the size row to KB</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">ls</span> <span class="token operator">|</span> <span class="token function">format</span> filesize size KB
</code></pre></div><p>Convert the apparent row to B</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">du</span> <span class="token operator">|</span> <span class="token function">format</span> filesize apparent B
</code></pre></div>`,9);function u(a,_){return o(),r("div",null,[e("h1",l,[d,h,e("code",null,t(a.$frontmatter.title),1),p]),e("div",f,t(a.$frontmatter.strings),1),m])}const v=n(c,[["render",u],["__file","format_filesize.html.vue"]]);export{v as default};
