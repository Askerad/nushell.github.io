import{_ as s,o as t,c as n,a,t as r,d as o,e as c}from"./app.6670dc1a.js";const p={},l=a("h1",{id:"frontmatter-title",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#"),o(),a("code",null,"{{ $frontmatter.title }}")],-1),i={style:{"white-space":"pre-wrap"}},d=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; str kebab-case ...rest</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: optionally convert text to kebab-case by column paths</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>convert a string to kebab-case</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;NuShell&#39;</span> <span class="token operator">|</span> str kebab-case
</code></pre></div><p>convert a string to kebab-case</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;thisIsTheFirstCase&#39;</span> <span class="token operator">|</span> str kebab-case
</code></pre></div><p>convert a string to kebab-case</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;THIS_IS_THE_SECOND_CASE&#39;</span> <span class="token operator">|</span> str kebab-case
</code></pre></div><p>convert a column from a table to kebab-case</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>lang, gems<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>nuTest, <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> str kebab-case lang
</code></pre></div>`,13);function h(e,u){return t(),n("div",null,[l,a("div",i,r(e.$frontmatter.usage),1),d])}var g=s(p,[["render",h],["__file","str_kebab-case.html.vue"]]);export{g as default};
