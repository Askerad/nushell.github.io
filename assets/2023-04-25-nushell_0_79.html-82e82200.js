import{_ as o,M as s,p as a,q as h,R as i,Q as t,t as e,N as l,a1 as r}from"./framework-344bb0e4.js";const u="/assets/0_79_ide-39ed47d6.png",d={},c=t("h1",{id:"nushell-0-79",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nushell-0-79","aria-hidden":"true"},"#"),e(" Nushell 0.79")],-1),p=t("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your command line. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful command line pipelines.",-1),_=t("p",null,"Today, we're releasing version 0.79 of Nu. This release adds a standard library written in nu itself and enhanced IDE support.",-1),g=t("h1",{id:"where-to-get-it",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),e(" Where to get it")],-1),f={href:"https://github.com/nushell/nushell/releases/tag/0.79.0",target:"_blank",rel:"noopener noreferrer"},b={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},m=t("code",null,"cargo install nu",-1),k=t("p",null,[e("NOTE: The optional dataframe functionality is available by "),t("code",null,"cargo install nu --features=dataframe"),e(".")],-1),v=t("p",null,[e("As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use "),t("code",null,"cargo install nu_plugin_<plugin name>"),e(".")],-1),w=t("h1",{id:"themes-of-this-release-new-features",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#themes-of-this-release-new-features","aria-hidden":"true"},"#"),e(" Themes of this release / New features")],-1),y={id:"standard-library-amtoine-bobhy-fdncred-presidento",tabindex:"-1"},x=t("a",{class:"header-anchor",href:"#standard-library-amtoine-bobhy-fdncred-presidento","aria-hidden":"true"},"#",-1),N={href:"https://github.com/nushell/nushell/pulls?q=is%3Aclosed+is%3Apr+label%3Astd-library",target:"_blank",rel:"noopener noreferrer"},I=r("<p>This is it. We finally release the standard library with this <code>0.79</code>! It&#39;s been on the mind of the core team of Nushell for some time and it was made real between the two releases.</p><p>But first of all... <strong>what is the <em>standard library</em>?</strong></p><p>The nushell standard library is a <strong>collection of nushell scripts</strong> that are <strong>automatically loaded</strong> in the nushell binary and <strong>reachable via the <code>use</code> command</strong> without any additional setup.</p><blockquote><p>ðŸ’¡ <strong>Note</strong><br> some of the commands from the standard library are <code>use</code>d without human intervention as part of what we call the <em>prelude</em>.</p><p>As said above, the other commands are available with the <code>use</code> command. The goal of this library is, as its name suggests, to provide a <em>standard</em> experience and a <em>standardized</em> set of commands and tools to any Nushell user. In <code>std</code>, one can find things like</p></blockquote><ul><li>a test framework to write robust Nushell scripts, modules and libraries</li><li>implementation of builtin commands once written in <code>rust</code></li><li>logging commands with several log levels</li><li>...</li></ul><blockquote><p>ðŸ’¡ <strong>Note</strong><br> yes, you heard right, in the future, the standard library might become a sanctuary for non-time-critical commands that were once written in <code>rust</code> as part of the built-in set of commands!</p><p>Right now, we are actively trying to move the <code>help</code> commands from the <code>nushell</code> core implementation to the library.</p></blockquote><p>With this release, the library comes with the following custom commands:</p>",7),R=t("thead",null,[t("tr",null,[t("th",null,"module"),t("th",null,"description"),t("th",null,"commands")])],-1),A={href:"https://github.com/nushell/nushell/blob/main/crates/nu-std/lib/testing.nu",target:"_blank",rel:"noopener noreferrer"},T=t("code",null,"std assert",-1),S=t("td",null,"a set of commands to write tests",-1),U=t("td",null,"assert, assert, equal, assert, error, assert, greater, assert, greater, or, equal, assert, length, assert, less, assert, less, or, equal, assert, not, equal, assert, skip, assert, str, contains",-1),E={href:"https://github.com/nushell/nushell/blob/main/crates/nu-std/lib/dirs.nu",target:"_blank",rel:"noopener noreferrer"},C=t("code",null,"std dirs",-1),D=t("td",null,[e("a re-implementation of the "),t("code",null,"shells"),e(" commands")],-1),F=t("td",null,"dirs, add, dirs, drop, dirs, next, dirs, prev, dirs, show",-1),B={href:"https://github.com/nushell/nushell/blob/main/crates/nu-std/lib/help.nu",target:"_blank",rel:"noopener noreferrer"},L=t("code",null,"std help",-1),q=t("td",null,"a Nushell implementation of the built-in commands",-1),O=t("td",null,"help, help, aliases, help, commands, help, externs, help, modules, help, operators",-1),j={href:"https://github.com/nushell/nushell/blob/main/crates/nu-std/lib/iter.nu",target:"_blank",rel:"noopener noreferrer"},M=t("code",null,"std iter",-1),V=t("td",null,"an extension of built-in commands to iterate over data",-1),W=t("td",null,"iter, filter-map, iter, find, iter, intersperse, iter, scan",-1),P={href:"https://github.com/nushell/nushell/blob/main/crates/nu-std/lib/log.nu",target:"_blank",rel:"noopener noreferrer"},$=t("code",null,"std log",-1),z=t("td",null,"never miss something in your scripts",-1),G=t("td",null,"log, critical, log, debug, log, error, log, info, log, warning",-1),J={href:"https://github.com/nushell/nushell/blob/main/crates/nu-std/lib/xml.nu",target:"_blank",rel:"noopener noreferrer"},K=t("code",null,"xml",-1),H=t("td",null,"tools to interact with Xml data",-1),X=t("td",null,"xaccess, xinsert, xtype, xupdate",-1),Q=t("ul",null,[t("li",null,[e("some other commands live under the "),t("code",null,"std"),e(" namespace, without any module: "),t("code",null,"clip"),e(", "),t("code",null,"path add"),e(" and "),t("code",null,"run-tests")])],-1),Y=t("h3",{id:"tl-dr",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#tl-dr","aria-hidden":"true"},"#"),e(" TL;DR")],-1),Z={href:"https://github.com/nushell/nushell/pulls?q=is%3Aclosed+is%3Apr+label%3Astd-library",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://github.com/bobhy",target:"_blank",rel:"noopener noreferrer"},te={href:"https://github.com/fdncred",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://github.com/presidento",target:"_blank",rel:"noopener noreferrer"},le=t("ul",null,[t("li",null,"the library can be used and tested with")],-1),re=t("div",{class:"language-nushell","data-ext":"nushell"},[t("pre",{class:"language-nushell"},[t("code",null,"use std  # will load the whole library under the `std` namespace\n")])],-1),oe=t("p",null,"or use direct imports, such as",-1),se=t("div",{class:"language-nushell","data-ext":"nushell"},[t("pre",{class:"language-nushell"},[t("code",null,`use std dirs
`)])],-1),ae={href:"https://github.com/nushell/nushell/issues/8450",target:"_blank",rel:"noopener noreferrer"},he={href:"https://www.nushell.sh/book/testing.html",target:"_blank",rel:"noopener noreferrer"},ie=t("em",null,"Testing your Nushell code",-1),ue={href:"https://www.nushell.sh/book/standard_library.html",target:"_blank",rel:"noopener noreferrer"},de=t("em",null,"Standard library",-1),ce={href:"https://github.com/nushell/nushell/tree/main/crates/nu-std",target:"_blank",rel:"noopener noreferrer"},pe=t("code",null,"nu-std",-1),_e={href:"https://github.com/nushell/nushell/blob/main/crates/nu-std/CONTRIBUTING.md",target:"_blank",rel:"noopener noreferrer"},ge=t("code",null,"CONTRIBUTING.md",-1),fe=t("em",null,[e("developing with "),t("code",null,"std")],-1),be=t("p",null,[e("If, for some reason, you want to load Nushell without the standard library, start "),t("code",null,"nu"),e(" with the "),t("code",null,"--no-std-lib"),e(". This can be the case if you find the startup times much longer than before. We're aiming to improve the loading speed in the future.")],-1),me={id:"enhanced-ide-support-in-our-vs-code-extension-jt-fdncred",tabindex:"-1"},ke=t("a",{class:"header-anchor",href:"#enhanced-ide-support-in-our-vs-code-extension-jt-fdncred","aria-hidden":"true"},"#",-1),ve={href:"https://github.com/nushell/nushell/pull/8745",target:"_blank",rel:"noopener noreferrer"},we={href:"https://github.com/nushell/vscode-nushell-lang/pull/89",target:"_blank",rel:"noopener noreferrer"},ye=t("p",null,[t("img",{src:u,alt:"IDE support"})],-1),xe={href:"https://en.wikipedia.org/wiki/Language_Server_Protocol",target:"_blank",rel:"noopener noreferrer"},Ne={href:"https://github.com/nushell/vscode-nushell-lang",target:"_blank",rel:"noopener noreferrer"},Ie=t("p",null,"While currently we have only VSCode integration, the server itself is standalone and we welcome projects adding the LSP support to more editors.",-1),Re={id:"atuin-now-supports-nushell",tabindex:"-1"},Ae=t("a",{class:"header-anchor",href:"#atuin-now-supports-nushell","aria-hidden":"true"},"#",-1),Te=t("code",null,"atuin",-1),Se={href:"https://atuin.sh/blog/release-v14",target:"_blank",rel:"noopener noreferrer"},Ue={href:"https://github.com/stevenxxiu",target:"_blank",rel:"noopener noreferrer"},Ee=t("code",null,"atuin",-1),Ce={id:"relaxed-parsing-rules-jt",tabindex:"-1"},De=t("a",{class:"header-anchor",href:"#relaxed-parsing-rules-jt","aria-hidden":"true"},"#",-1),Fe={href:"https://github.com/nushell/nushell/pull/8846",target:"_blank",rel:"noopener noreferrer"},Be=t("p",null,[e("We listened to your feedback around the syntax changes introduced with 0.78 and decided to revert to the old behavior around the parsing rules for numeric literals as well as the compulsory "),t("code",null,"||"),e(" for closures.")],-1),Le={id:"removed-old-alias-implementation-kubouch",tabindex:"-1"},qe=t("a",{class:"header-anchor",href:"#removed-old-alias-implementation-kubouch","aria-hidden":"true"},"#",-1),Oe={href:"https://github.com/nushell/nushell/pull/8797",target:"_blank",rel:"noopener noreferrer"},je=r("<p>While there are still some missing pieces, we removed the old alias implementation. This means that <code>old-alias</code> is no longer available. We decided to remove it to clean up the code. It makes further fixes to aliases easier as you do not need to remember which alias implementation a piece of code belongs to.</p><p>There are two notable missing features from the old aliases:</p><ul><li>Missing completions with external completers.</li><li>Most parser keywords (such as <code>source</code>) cannot be aliased but adding support for aliasing them should be possible in most cases.</li><li>Not possible to alias with environment shorthands (e.g., <code>alias foo = FOO=bar spam</code>)</li><li>Some presentation issues, such as the output of <code>which</code> and the alias <code>usage</code> pointing at the aliased call instead of the alias itself.</li></ul>",3),Me={id:"changes-to-default-files-locations-ito-hiroki",tabindex:"-1"},Ve=t("a",{class:"header-anchor",href:"#changes-to-default-files-locations-ito-hiroki","aria-hidden":"true"},"#",-1),We={href:"https://github.com/nushell/nushell/pull/8792",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://github.com/nushell/nushell/issues/8887",target:"_blank",rel:"noopener noreferrer"},$e=r("<p><code>$nu.config-path</code> and <code>$nu.env-path</code> are now set based on <code>--config</code> and <code>--env-config</code> flags passed to Nushell and also use the path after resolving symlinks. This means that they no longer guarantee pointing at the default Nushell&#39;s config directory. To be able to refere to the default config directory, <code>$nu.default-config-dir</code> was added and used in default <code>env.nu</code> to always point <code>NU_LIB_DIRS</code> to the <code>scripts</code> directory under the default config directory.</p>",1),ze={href:"https://github.com/nushell/nushell/pull/8861",target:"_blank",rel:"noopener noreferrer"},Ge=t("code",null,"$env.CURRENT_FILE",-1),Je=t("h1",{id:"breaking-changes",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#breaking-changes","aria-hidden":"true"},"#"),e(" Breaking changes")],-1),Ke={href:"https://github.com/nushell/nushell/pull/8797",target:"_blank",rel:"noopener noreferrer"},He=t("code",null,"old-alias",-1),Xe={href:"https://github.com/nushell/nushell/pull/8724",target:"_blank",rel:"noopener noreferrer"},Qe=t("code",null,"str index-of -r",-1),Ye={href:"https://github.com/nushell/nushell/pull/8792",target:"_blank",rel:"noopener noreferrer"},Ze=t("code",null,"config nu",-1),et=t("code",null,"config env",-1),tt=t("code",null,"$nu.config-path",-1),nt=t("code",null,"$nu.env-path",-1),lt={href:"https://github.com/nushell/nushell/pull/8779",target:"_blank",rel:"noopener noreferrer"},rt={href:"https://github.com/nushell/nushell/pull/8917",target:"_blank",rel:"noopener noreferrer"},ot=t("code",null,"exec",-1),st={href:"https://github.com/nushell/nushell/pull/8887",target:"_blank",rel:"noopener noreferrer"},at=t("code",null,"NU_LIB_DIRS",-1),ht=t("code",null,"env.nu",-1),it=t("h1",{id:"full-changelog",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#full-changelog","aria-hidden":"true"},"#"),e(" Full changelog")],-1),ut=t("h2",{id:"nushell",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nushell","aria-hidden":"true"},"#"),e(" Nushell")],-1),dt={href:"https://github.com/nushell/nushell/pull/8996",target:"_blank",rel:"noopener noreferrer"},ct=t("code",null,"reedline",-1),pt=t("code",null,"0.19.0",-1),_t={href:"https://github.com/nushell/nushell/pull/8876",target:"_blank",rel:"noopener noreferrer"},gt={href:"https://github.com/nushell/nushell/pull/8867",target:"_blank",rel:"noopener noreferrer"},ft={href:"https://github.com/nushell/nushell/pull/8866",target:"_blank",rel:"noopener noreferrer"},bt={href:"https://github.com/nushell/nushell/pull/8832",target:"_blank",rel:"noopener noreferrer"},mt=t("code",null,"nu-cli",-1),kt={href:"https://github.com/nushell/nushell/pull/8822",target:"_blank",rel:"noopener noreferrer"},vt={href:"https://github.com/nushell/nushell/pull/8741",target:"_blank",rel:"noopener noreferrer"},wt=t("code",null,"0.78.1",-1),yt={href:"https://github.com/nushell/nushell/pull/8982",target:"_blank",rel:"noopener noreferrer"},xt={href:"https://github.com/nushell/nushell/pull/8840",target:"_blank",rel:"noopener noreferrer"},Nt={href:"https://github.com/nushell/nushell/pull/8971",target:"_blank",rel:"noopener noreferrer"},It={href:"https://github.com/nushell/nushell/pull/8905",target:"_blank",rel:"noopener noreferrer"},Rt=t("code",null,"open",-1),At={href:"https://github.com/nushell/nushell/pull/8961",target:"_blank",rel:"noopener noreferrer"},Tt=t("code",null,"\\x1e",-1),St=t("code",null,"include_path",-1),Ut={href:"https://github.com/nushell/nushell/pull/8937",target:"_blank",rel:"noopener noreferrer"},Et=t("code",null,"find",-1),Ct={href:"https://github.com/nushell/nushell/pull/8921",target:"_blank",rel:"noopener noreferrer"},Dt={href:"https://github.com/nushell/nushell/pull/8915",target:"_blank",rel:"noopener noreferrer"},Ft={href:"https://github.com/nushell/nushell/pull/8910",target:"_blank",rel:"noopener noreferrer"},Bt=t("code",null,"$nu.scope.commands",-1),Lt={href:"https://github.com/nushell/nushell/pull/8909",target:"_blank",rel:"noopener noreferrer"},qt={href:"https://github.com/nushell/nushell/pull/8901",target:"_blank",rel:"noopener noreferrer"},Ot={href:"https://github.com/nushell/nushell/pull/8875",target:"_blank",rel:"noopener noreferrer"},jt={href:"https://github.com/nushell/nushell/pull/8873",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://github.com/nushell/nushell/pull/8801",target:"_blank",rel:"noopener noreferrer"},Vt={href:"https://github.com/nushell/nushell/pull/8957",target:"_blank",rel:"noopener noreferrer"},Wt={href:"https://github.com/nushell/nushell/pull/8917",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://github.com/nushell/nushell/pull/8861",target:"_blank",rel:"noopener noreferrer"},$t={href:"https://github.com/nushell/nushell/pull/8789",target:"_blank",rel:"noopener noreferrer"},zt={href:"https://github.com/nushell/nushell/pull/8768",target:"_blank",rel:"noopener noreferrer"},Gt={href:"https://github.com/nushell/nushell/pull/8750",target:"_blank",rel:"noopener noreferrer"},Jt={href:"https://github.com/nushell/nushell/pull/8949",target:"_blank",rel:"noopener noreferrer"},Kt={href:"https://github.com/nushell/nushell/pull/8913",target:"_blank",rel:"noopener noreferrer"},Ht={href:"https://github.com/nushell/nushell/pull/8903",target:"_blank",rel:"noopener noreferrer"},Xt={href:"https://github.com/nushell/nushell/pull/8881",target:"_blank",rel:"noopener noreferrer"},Qt={href:"https://github.com/nushell/nushell/pull/8864",target:"_blank",rel:"noopener noreferrer"},Yt={href:"https://github.com/nushell/nushell/pull/8857",target:"_blank",rel:"noopener noreferrer"},Zt={href:"https://github.com/nushell/nushell/pull/8846",target:"_blank",rel:"noopener noreferrer"},en={href:"https://github.com/nushell/nushell/pull/8845",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://github.com/nushell/nushell/pull/8833",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://github.com/nushell/nushell/pull/8830",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://github.com/nushell/nushell/pull/8800",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://github.com/nushell/nushell/pull/8798",target:"_blank",rel:"noopener noreferrer"},on={href:"https://github.com/nushell/nushell/pull/8765",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://github.com/nushell/nushell/pull/8757",target:"_blank",rel:"noopener noreferrer"},an={href:"https://github.com/nushell/nushell/pull/8745",target:"_blank",rel:"noopener noreferrer"},hn={href:"https://github.com/nushell/nushell/pull/8944",target:"_blank",rel:"noopener noreferrer"},un=t("code",null,"*-BuiltinVar",-1),dn={href:"https://github.com/nushell/nushell/pull/8926",target:"_blank",rel:"noopener noreferrer"},cn=t("code",null,"filter-map",-1),pn=t("code",null,"std iter",-1),_n={href:"https://github.com/nushell/nushell/pull/8899",target:"_blank",rel:"noopener noreferrer"},gn=t("code",null,"iter",-1),fn={href:"https://github.com/nushell/nushell/pull/8897",target:"_blank",rel:"noopener noreferrer"},bn=t("code",null,"set-git-hooks",-1),mn=t("code",null,"setup-git-hooks",-1),kn={href:"https://github.com/nushell/nushell/pull/8886",target:"_blank",rel:"noopener noreferrer"},vn=t("code",null,"let-else",-1),wn={href:"https://github.com/nushell/nushell/pull/8758",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://github.com/nushell/nushell/pull/8724",target:"_blank",rel:"noopener noreferrer"},xn=t("code",null,"str index-of -r",-1),Nn={href:"https://github.com/nushell/nushell/pull/8932",target:"_blank",rel:"noopener noreferrer"},In=t("code",null,"into decimal",-1),Rn={href:"https://github.com/nushell/nushell/pull/8877",target:"_blank",rel:"noopener noreferrer"},An={href:"https://github.com/nushell/nushell/pull/8850",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://github.com/nushell/nushell/pull/8776",target:"_blank",rel:"noopener noreferrer"},Sn=t("code",null,"setup",-1),Un=t("code",null,"teardown",-1),En={href:"https://github.com/nushell/nushell/pull/8766",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://github.com/nushell/nushell/pull/8748",target:"_blank",rel:"noopener noreferrer"},Dn=t("code",null,"assert skip",-1),Fn={href:"https://github.com/nushell/nushell/pull/8912",target:"_blank",rel:"noopener noreferrer"},Bn=t("code",null,"CONTRIBUTING.md",-1),Ln=t("code",null,"nu-std",-1),qn={href:"https://github.com/nushell/nushell/pull/8898",target:"_blank",rel:"noopener noreferrer"},On=t("code",null,"clip",-1),jn={href:"https://github.com/nushell/nushell/pull/8855",target:"_blank",rel:"noopener noreferrer"},Mn={href:"https://github.com/nushell/nushell/pull/8841",target:"_blank",rel:"noopener noreferrer"},Vn={href:"https://github.com/nushell/nushell/pull/8816",target:"_blank",rel:"noopener noreferrer"},Wn={href:"https://github.com/nushell/nushell/pull/8815",target:"_blank",rel:"noopener noreferrer"},Pn={href:"https://github.com/nushell/nushell/pull/8811",target:"_blank",rel:"noopener noreferrer"},$n=t("code",null,"README",-1),zn={href:"https://github.com/nushell/nushell/pull/8799",target:"_blank",rel:"noopener noreferrer"},Gn=t("code",null,"help",-1),Jn={href:"https://github.com/nushell/nushell/pull/8795",target:"_blank",rel:"noopener noreferrer"},Kn=t("code",null,"ansi",-1),Hn={href:"https://github.com/nushell/nushell/pull/8794",target:"_blank",rel:"noopener noreferrer"},Xn=t("code",null,"help",-1),Qn=t("code",null,"std help ...",-1),Yn={href:"https://github.com/nushell/nushell/pull/8774",target:"_blank",rel:"noopener noreferrer"},Zn={href:"https://github.com/nushell/nushell/pull/8770",target:"_blank",rel:"noopener noreferrer"},el={href:"https://github.com/nushell/nushell/pull/8906",target:"_blank",rel:"noopener noreferrer"},tl={href:"https://github.com/nushell/nushell/pull/8868",target:"_blank",rel:"noopener noreferrer"},nl={href:"https://github.com/nushell/nushell/pull/8895",target:"_blank",rel:"noopener noreferrer"},ll=t("code",null,"std run-tests",-1),rl={href:"https://github.com/nushell/nushell/pull/8894",target:"_blank",rel:"noopener noreferrer"},ol={href:"https://github.com/nushell/nushell/pull/8805",target:"_blank",rel:"noopener noreferrer"},sl={href:"https://github.com/nushell/nushell/pull/8889",target:"_blank",rel:"noopener noreferrer"},al=t("code",null,"continue",-1),hl=t("code",null,"each",-1),il={href:"https://github.com/nushell/nushell/pull/8887",target:"_blank",rel:"noopener noreferrer"},ul=t("code",null,"NU_LIB_DIRS",-1),dl=t("code",null,"$nu.config-path",-1),cl={href:"https://github.com/nushell/nushell/pull/8792",target:"_blank",rel:"noopener noreferrer"},pl=t("code",null,"config {nu,env}",-1),_l=t("code",null,"$nu.{config,env}-file",-1),gl={href:"https://github.com/nushell/nushell/pull/8735",target:"_blank",rel:"noopener noreferrer"},fl={href:"https://github.com/nushell/nushell/pull/8871",target:"_blank",rel:"noopener noreferrer"},bl=t("code",null,"rm",-1),ml={href:"https://github.com/nushell/nushell/pull/8860",target:"_blank",rel:"noopener noreferrer"},kl={href:"https://github.com/nushell/nushell/pull/8843",target:"_blank",rel:"noopener noreferrer"},vl=t("code",null,"for",-1),wl={href:"https://github.com/nushell/nushell/pull/8849",target:"_blank",rel:"noopener noreferrer"},yl={href:"https://github.com/nushell/nushell/pull/8842",target:"_blank",rel:"noopener noreferrer"},xl={href:"https://github.com/nushell/nushell/pull/8838",target:"_blank",rel:"noopener noreferrer"},Nl={href:"https://github.com/nushell/nushell/pull/8837",target:"_blank",rel:"noopener noreferrer"},Il={href:"https://github.com/nushell/nushell/pull/8836",target:"_blank",rel:"noopener noreferrer"},Rl={href:"https://github.com/nushell/nushell/pull/8835",target:"_blank",rel:"noopener noreferrer"},Al={href:"https://github.com/nushell/nushell/pull/8730",target:"_blank",rel:"noopener noreferrer"},Tl={href:"https://github.com/nushell/nushell/pull/8722",target:"_blank",rel:"noopener noreferrer"},Sl={href:"https://github.com/nushell/nushell/pull/8721",target:"_blank",rel:"noopener noreferrer"},Ul={href:"https://github.com/nushell/nushell/pull/8720",target:"_blank",rel:"noopener noreferrer"},El={href:"https://github.com/nushell/nushell/pull/8820",target:"_blank",rel:"noopener noreferrer"},Cl=t("code",null,"clippy",-1),Dl={href:"https://github.com/nushell/nushell/pull/8818",target:"_blank",rel:"noopener noreferrer"},Fl=t("code",null,"pretty_assertions",-1),Bl={href:"https://github.com/nushell/nushell/pull/8808",target:"_blank",rel:"noopener noreferrer"},Ll={href:"https://github.com/nushell/nushell/pull/8807",target:"_blank",rel:"noopener noreferrer"},ql={href:"https://github.com/nushell/nushell/pull/8803",target:"_blank",rel:"noopener noreferrer"},Ol={href:"https://github.com/nushell/nushell/pull/8797",target:"_blank",rel:"noopener noreferrer"},jl={href:"https://github.com/nushell/nushell/pull/8780",target:"_blank",rel:"noopener noreferrer"},Ml={href:"https://github.com/nushell/nushell/pull/8779",target:"_blank",rel:"noopener noreferrer"},Vl={href:"https://github.com/nushell/nushell/pull/8777",target:"_blank",rel:"noopener noreferrer"},Wl={href:"https://github.com/nushell/nushell/pull/8793",target:"_blank",rel:"noopener noreferrer"},Pl={href:"https://github.com/nushell/nushell/pull/8759",target:"_blank",rel:"noopener noreferrer"},$l=t("code",null,"help",-1),zl=t("h2",{id:"vscode-extension",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#vscode-extension","aria-hidden":"true"},"#"),e(" VSCode Extension")],-1),Gl={href:"https://github.com/nushell/vscode-nushell-lang/pull/113",target:"_blank",rel:"noopener noreferrer"},Jl=t("code",null,":",-1),Kl=t("code",null,"\\x1e",-1),Hl={href:"https://github.com/nushell/vscode-nushell-lang/pull/111",target:"_blank",rel:"noopener noreferrer"},Xl={href:"https://github.com/nushell/vscode-nushell-lang/pull/110",target:"_blank",rel:"noopener noreferrer"},Ql={href:"https://github.com/nushell/vscode-nushell-lang/pull/109",target:"_blank",rel:"noopener noreferrer"},Yl={href:"https://github.com/nushell/vscode-nushell-lang/pull/107",target:"_blank",rel:"noopener noreferrer"},Zl={href:"https://github.com/nushell/vscode-nushell-lang/pull/106",target:"_blank",rel:"noopener noreferrer"},er={href:"https://github.com/nushell/vscode-nushell-lang/pull/105",target:"_blank",rel:"noopener noreferrer"},tr={href:"https://github.com/nushell/vscode-nushell-lang/pull/103",target:"_blank",rel:"noopener noreferrer"},nr={href:"https://github.com/nushell/vscode-nushell-lang/pull/101",target:"_blank",rel:"noopener noreferrer"},lr={href:"https://github.com/nushell/vscode-nushell-lang/pull/98",target:"_blank",rel:"noopener noreferrer"},rr={href:"https://github.com/nushell/vscode-nushell-lang/pull/97",target:"_blank",rel:"noopener noreferrer"},or={href:"https://github.com/nushell/vscode-nushell-lang/pull/96",target:"_blank",rel:"noopener noreferrer"},sr={href:"https://github.com/nushell/vscode-nushell-lang/pull/95",target:"_blank",rel:"noopener noreferrer"},ar={href:"https://github.com/nushell/vscode-nushell-lang/pull/94",target:"_blank",rel:"noopener noreferrer"},hr={href:"https://github.com/nushell/vscode-nushell-lang/pull/89",target:"_blank",rel:"noopener noreferrer"},ir={href:"https://github.com/nushell/vscode-nushell-lang/pull/108",target:"_blank",rel:"noopener noreferrer"},ur={href:"https://github.com/nushell/vscode-nushell-lang/pull/102",target:"_blank",rel:"noopener noreferrer"},dr={href:"https://github.com/nushell/vscode-nushell-lang/pull/100",target:"_blank",rel:"noopener noreferrer"},cr={href:"https://github.com/nushell/vscode-nushell-lang/pull/99",target:"_blank",rel:"noopener noreferrer"},pr={href:"https://github.com/nushell/vscode-nushell-lang/pull/93",target:"_blank",rel:"noopener noreferrer"},_r={href:"https://github.com/nushell/vscode-nushell-lang/pull/92",target:"_blank",rel:"noopener noreferrer"},gr=t("h2",{id:"documentation",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#documentation","aria-hidden":"true"},"#"),e(" Documentation")],-1),fr={href:"https://github.com/nushell/nushell.github.io/pull/887",target:"_blank",rel:"noopener noreferrer"},br={href:"https://github.com/nushell/nushell.github.io/pull/886",target:"_blank",rel:"noopener noreferrer"},mr=t("code",null,"insert",-1),kr=t("code",null,"update",-1),vr={href:"https://github.com/nushell/nushell.github.io/pull/878",target:"_blank",rel:"noopener noreferrer"},wr={href:"https://github.com/nushell/nushell.github.io/pull/877",target:"_blank",rel:"noopener noreferrer"},yr=t("code",null,"str substring",-1),xr={href:"https://github.com/nushell/nushell.github.io/pull/885",target:"_blank",rel:"noopener noreferrer"},Nr={href:"https://github.com/nushell/nushell.github.io/pull/855",target:"_blank",rel:"noopener noreferrer"},Ir={href:"https://github.com/nushell/nushell.github.io/pull/883",target:"_blank",rel:"noopener noreferrer"},Rr={href:"https://github.com/nushell/nushell.github.io/pull/882",target:"_blank",rel:"noopener noreferrer"},Ar={href:"https://github.com/nushell/nushell.github.io/pull/867",target:"_blank",rel:"noopener noreferrer"},Tr={href:"https://github.com/nushell/nushell.github.io/pull/863",target:"_blank",rel:"noopener noreferrer"},Sr={href:"https://github.com/nushell/nushell.github.io/pull/859",target:"_blank",rel:"noopener noreferrer"},Ur={href:"https://github.com/nushell/nushell.github.io/pull/881",target:"_blank",rel:"noopener noreferrer"},Er={href:"https://github.com/nushell/nushell.github.io/pull/880",target:"_blank",rel:"noopener noreferrer"},Cr={href:"https://github.com/nushell/nushell.github.io/pull/879",target:"_blank",rel:"noopener noreferrer"},Dr={href:"https://github.com/nushell/nushell.github.io/pull/876",target:"_blank",rel:"noopener noreferrer"},Fr={href:"https://github.com/nushell/nushell.github.io/pull/868",target:"_blank",rel:"noopener noreferrer"},Br={href:"https://github.com/nushell/nushell.github.io/pull/875",target:"_blank",rel:"noopener noreferrer"},Lr={href:"https://github.com/nushell/nushell.github.io/pull/874",target:"_blank",rel:"noopener noreferrer"},qr={href:"https://github.com/nushell/nushell.github.io/pull/873",target:"_blank",rel:"noopener noreferrer"},Or={href:"https://github.com/nushell/nushell.github.io/pull/871",target:"_blank",rel:"noopener noreferrer"},jr={href:"https://github.com/nushell/nushell.github.io/pull/865",target:"_blank",rel:"noopener noreferrer"},Mr={href:"https://github.com/nushell/nushell.github.io/pull/862",target:"_blank",rel:"noopener noreferrer"},Vr={href:"https://github.com/nushell/nushell.github.io/pull/861",target:"_blank",rel:"noopener noreferrer"},Wr={href:"https://github.com/nushell/nushell.github.io/pull/860",target:"_blank",rel:"noopener noreferrer"},Pr={href:"https://github.com/nushell/nushell.github.io/pull/852",target:"_blank",rel:"noopener noreferrer"},$r=t("code",null,"code:",-1),zr=t("h2",{id:"nu-ncripts",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nu-ncripts","aria-hidden":"true"},"#"),e(" nu_ncripts")],-1),Gr={href:"https://github.com/nushell/nu_scripts/pull/462",target:"_blank",rel:"noopener noreferrer"},Jr=t("code",null,"nu-std",-1),Kr={href:"https://github.com/nushell/nu_scripts/pull/461",target:"_blank",rel:"noopener noreferrer"},Hr={href:"https://github.com/nushell/nu_scripts/pull/460",target:"_blank",rel:"noopener noreferrer"},Xr={href:"https://github.com/nushell/nu_scripts/pull/455",target:"_blank",rel:"noopener noreferrer"},Qr={href:"https://github.com/nushell/nu_scripts/pull/438",target:"_blank",rel:"noopener noreferrer"},Yr={href:"https://github.com/nushell/nu_scripts/pull/459",target:"_blank",rel:"noopener noreferrer"},Zr={href:"https://github.com/nushell/nu_scripts/pull/458",target:"_blank",rel:"noopener noreferrer"},eo={href:"https://github.com/nushell/nu_scripts/pull/450",target:"_blank",rel:"noopener noreferrer"},to={href:"https://github.com/nushell/nu_scripts/pull/457",target:"_blank",rel:"noopener noreferrer"},no={href:"https://github.com/nushell/nu_scripts/pull/456",target:"_blank",rel:"noopener noreferrer"},lo={href:"https://github.com/nushell/nu_scripts/pull/449",target:"_blank",rel:"noopener noreferrer"},ro={href:"https://github.com/nushell/nu_scripts/pull/448",target:"_blank",rel:"noopener noreferrer"},oo={href:"https://github.com/nushell/nu_scripts/pull/445",target:"_blank",rel:"noopener noreferrer"},so={href:"https://github.com/nushell/nu_scripts/pull/444",target:"_blank",rel:"noopener noreferrer"},ao={href:"https://github.com/nushell/nu_scripts/pull/441",target:"_blank",rel:"noopener noreferrer"},ho={href:"https://github.com/nushell/nu_scripts/pull/454",target:"_blank",rel:"noopener noreferrer"},io={href:"https://github.com/nushell/nu_scripts/pull/453",target:"_blank",rel:"noopener noreferrer"},uo={href:"https://github.com/nushell/nu_scripts/pull/452",target:"_blank",rel:"noopener noreferrer"},co={href:"https://github.com/nushell/nu_scripts/pull/451",target:"_blank",rel:"noopener noreferrer"},po={href:"https://github.com/nushell/nu_scripts/pull/447",target:"_blank",rel:"noopener noreferrer"},_o=t("code",null,"||",-1),go={href:"https://github.com/nushell/nu_scripts/pull/442",target:"_blank",rel:"noopener noreferrer"},fo={href:"https://github.com/nushell/nu_scripts/pull/446",target:"_blank",rel:"noopener noreferrer"},bo={href:"https://github.com/nushell/nu_scripts/pull/440",target:"_blank",rel:"noopener noreferrer"},mo={href:"https://github.com/nushell/nu_scripts/pull/443",target:"_blank",rel:"noopener noreferrer"},ko={href:"https://github.com/nushell/nu_scripts/pull/439",target:"_blank",rel:"noopener noreferrer"},vo={href:"https://github.com/nushell/nu_scripts/pull/437",target:"_blank",rel:"noopener noreferrer"},wo=t("h2",{id:"reedline",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#reedline","aria-hidden":"true"},"#"),e(" reedline")],-1),yo={href:"https://github.com/nushell/reedline/pull/575",target:"_blank",rel:"noopener noreferrer"},xo={href:"https://github.com/nushell/reedline/pull/574",target:"_blank",rel:"noopener noreferrer"},No={href:"https://github.com/nushell/reedline/pull/573",target:"_blank",rel:"noopener noreferrer"},Io=t("code",null,"current_insertion_point()",-1),Ro={href:"https://github.com/nushell/reedline/pull/571",target:"_blank",rel:"noopener noreferrer"},Ao={href:"https://github.com/nushell/reedline/pull/560",target:"_blank",rel:"noopener noreferrer"},To={href:"https://github.com/nushell/reedline/pull/569",target:"_blank",rel:"noopener noreferrer"},So={href:"https://github.com/nushell/reedline/pull/562",target:"_blank",rel:"noopener noreferrer"};function Uo(Eo,Co){const n=s("ExternalLinkIcon");return a(),h("div",null,[c,p,_,i(" more "),g,t("p",null,[e("Nu 0.79 is available as "),t("a",f,[e("pre-built binaries"),l(n)]),e(" or from "),t("a",b,[e("crates.io"),l(n)]),e(". If you have Rust installed you can install it using "),m,e(".")]),k,v,w,t("h2",y,[x,e(" Standard library ("),t("a",N,[e("@amtoine, @bobhy, @fdncred, @presidento, ..."),l(n)]),e(")")]),I,t("table",null,[R,t("tbody",null,[t("tr",null,[t("td",null,[t("a",A,[T,l(n)])]),S,U]),t("tr",null,[t("td",null,[t("a",E,[C,l(n)])]),D,F]),t("tr",null,[t("td",null,[t("a",B,[L,l(n)])]),q,O]),t("tr",null,[t("td",null,[t("a",j,[M,l(n)])]),V,W]),t("tr",null,[t("td",null,[t("a",P,[$,l(n)])]),z,G]),t("tr",null,[t("td",null,[t("a",J,[K,e(" module"),l(n)])]),H,X])])]),Q,Y,t("p",null,[e("As there has been quite a lot of contributions already (see the "),t("a",Z,[e("50 closed PRs"),l(n)]),e(" at the time i'm writing this ðŸ˜®), i'm just gonna give some hints and links in this release note, leaving the rest to the amazing work of other contributors who wrote parts of the lib and its documents (shout out to "),t("a",ee,[e("@bobhy"),l(n)]),e(", "),t("a",te,[e("@fdncred"),l(n)]),e(" and "),t("a",ne,[e("@presidento"),l(n)])]),le,re,oe,se,t("ul",null,[t("li",null,[e("one can follow the activity of the library in the "),t("a",ae,[e("roadmap"),l(n)])]),t("li",null,[e("the library comes with a test framework; see the "),t("a",he,[ie,l(n)]),e(" chapter of the book")]),t("li",null,[e("the long term information, changelog and updates shall be found in the "),t("a",ue,[de,l(n)]),e(" chapter of the Nushell book")]),t("li",null,[e("if you are a contributor willing to help out, everything happens in the "),t("a",ce,[pe,e(" crate"),l(n)]),e(", especially the "),t("a",_e,[ge,e(" document"),l(n)]),e(' which explains all there is to know about "'),fe,e('" in great details.')])]),be,t("h2",me,[ke,e(" enhanced IDE support in our VS code extension ("),t("a",ve,[e("JT"),l(n)]),e(", "),t("a",we,[e("fdncred"),l(n)]),e(")")]),ye,t("p",null,[e("Nushell now has a first "),t("a",xe,[e("LSP (Language Server Protocol)"),l(n)]),e(" implementation with a VSCode integration. If you install the latest version of our "),t("a",Ne,[e("VSCode plugin"),l(n)]),e(", you'll see hovers, inlays, tooltips, error squigglies and other features. We are still very early in the LSP development, but the extension is already very usable and definitely moves the experience of writing Nu code to another level!")]),Ie,t("h2",Re,[Ae,e(),Te,e(" now "),t("a",Se,[e("supports Nushell"),l(n)])]),t("p",null,[e("Thanks to "),t("a",Ue,[e("@stevenxxiu"),l(n)]),e(" you can now use "),Ee,e(" with Nushell. We are happy to see Nushell supported by more projects and we welcome PRs adding more integrations.")]),t("h2",Ce,[De,e(" Relaxed parsing rules ("),t("a",Fe,[e("JT"),l(n)]),e(")")]),Be,t("h2",Le,[qe,e(" Removed old alias implementation ("),t("a",Oe,[e("kubouch"),l(n)]),e(")")]),je,t("h2",Me,[Ve,e(" Changes to default files locations ("),t("a",We,[e("ito"),l(n)]),e("-"),t("a",Pe,[e("hiroki"),l(n)]),e(")")]),$e,t("p",null,[e("Related to that, "),t("a",ze,[Ge,l(n)]),e(" was added to be able to show the currently evaluated file.")]),Je,t("ul",null,[t("li",null,[t("a",Ke,[e("#8797"),l(n)]),e(),He,e(" is no longer available")]),t("li",null,[t("a",Xe,[e("#8724"),l(n)]),e(),Qe,e(" now uses ranges")]),t("li",null,[t("a",Ye,[e("#8792"),l(n)]),e(),Ze,e(" and "),et,e(" now open "),tt,e(" and "),nt,e(", respectively.")]),t("li",null,[t("a",lt,[e("#8779"),l(n)]),e(" Aliasing math expressions now shows error immediately instead of failing silently and showing a confusing error later.")]),t("li",null,[t("a",rt,[e("#8917"),l(n)]),e(),ot,e(" inherits Nushell's environment variables")]),t("li",null,[t("a",st,[e("#8887"),l(n)]),e(),at,e(" definition in "),ht,e(" changed")])]),it,ut,t("ul",null,[t("li",null,[e("sholderbach created "),t("a",dt,[e("Pin "),ct,e(" to "),pt,e(" release"),l(n)]),e(", and "),t("a",_t,[e("Run coverage immediately"),l(n)]),e(", and "),t("a",gt,[e("Reenable CI coverage"),l(n)]),e(", and "),t("a",ft,[e("Fix span of multibyte short flags"),l(n)]),e(", and "),t("a",bt,[e("Move CLI related commands to "),mt,l(n)]),e(", and "),t("a",kt,[e("Follow up #8758 with a style fix"),l(n)]),e(", and "),t("a",vt,[e("Bump to "),wt,e(" development version"),l(n)])]),t("li",null,[e("hustcer created "),t("a",yt,[e("Add npm installation instruction"),l(n)]),e(", and "),t("a",xt,[e("Upgrade to nu v0.78 for binaries release workflow"),l(n)])]),t("li",null,[e("rgwood created "),t("a",Nt,[e("Tweak run-external signature so command must be a string"),l(n)]),e(", and "),t("a",It,[e("Upgrade "),Rt,e(" crate to fix WSL bug"),l(n)])]),t("li",null,[e("fdncred created "),t("a",At,[e("use record separator "),Tt,e(" for "),St,l(n)]),e(", and "),t("a",Ut,[e("allow "),Et,e(" command to look in specified columns only"),l(n)]),e(", and "),t("a",Ct,[e("fix reedline breaking changes due to PR562"),l(n)]),e(", and "),t("a",Dt,[e("fix bug with include_path -I parameter"),l(n)]),e(", and "),t("a",Ft,[e("allow custom commands to show up in "),Bt,e(" better"),l(n)]),e(", and "),t("a",Lt,[e("remove debug print bug"),l(n)]),e(", and "),t("a",qt,[e("Update issue templates"),l(n)]),e(", and "),t("a",Ot,[e("limit the ide-check error amount"),l(n)]),e(", and "),t("a",jt,[e("change include dirs separator to colon"),l(n)]),e(", and "),t("a",Mt,[e("make inlays show type instead of shape"),l(n)])]),t("li",null,[e("pingiun created "),t("a",Vt,[e("Set override locale in toolkit"),l(n)]),e(", and "),t("a",Wt,[e("Set env in exec command"),l(n)]),e(", and "),t("a",Pt,[e("Add $env.CURRENT_FILE variable"),l(n)]),e(", and "),t("a",$t,[e("Add $nu.current-exe variable"),l(n)]),e(", and "),t("a",zt,[e("Add ppid example for ps"),l(n)]),e(", and "),t("a",Gt,[e("Add ppid to ps command"),l(n)])]),t("li",null,[e("jntrnr created "),t("a",Jt,[e("Reuse the cached parse results of parsed files"),l(n)]),e(", and "),t("a",Kt,[e("Hopefully speedup startup"),l(n)]),e(", and "),t("a",Ht,[e("Allocate less when doing a capture discovery"),l(n)]),e(", and "),t("a",Xt,[e("Improve hovers, including for custom commands"),l(n)]),e(", and "),t("a",Qt,[e("Make -I take in a ;-delimited list"),l(n)]),e(", and "),t("a",Yt,[e("Adds multi-file support to IDE support"),l(n)]),e(", and "),t("a",Zt,[e("Relax the closure syntax, highlight differently"),l(n)]),e(", and "),t("a",en,[e("Revert numberlike parsing restriction"),l(n)]),e(", and "),t("a",tn,[e("Add option to not load std-lib. Default tests to not use std-lib"),l(n)]),e(", and "),t("a",nn,[e("Only add the std lib files once"),l(n)]),e(", and "),t("a",ln,[e("improve operation mismatch errors"),l(n)]),e(", and "),t("a",rn,[e("Fix parser recovery after error"),l(n)]),e(", and "),t("a",on,[e("Refactor to support multiple parse errors"),l(n)]),e(", and "),t("a",sn,[e("Add atuin to official support"),l(n)]),e(", and "),t("a",an,[e("Add IDE support"),l(n)])]),t("li",null,[e("1Kinoti created "),t("a",hn,[e("unify the "),un,e(" parser errors"),l(n)]),e(", and "),t("a",dn,[e("add "),cn,e(" command to "),pn,l(n)]),e(", and "),t("a",_n,[e("add "),gn,e(" module to standard library"),l(n)]),e(", and "),t("a",fn,[e("rename toolkit's "),bn,e(" to "),mn,l(n)]),e(", and "),t("a",kn,[e("use "),vn,e(" syntax where possible"),l(n)]),e(", and "),t("a",wn,[e("allow register to accept a const argument"),l(n)]),e(", and "),t("a",yn,[e("make "),xn,e(" use ranges"),l(n)])]),t("li",null,[e("presidento created "),t("a",Nn,[e("Fix "),In,e(" command category"),l(n)]),e(", and "),t("a",Rn,[e("std: remove logging example"),l(n)]),e(", and "),t("a",An,[e("Move unit test runner to standard library"),l(n)]),e(", and "),t("a",Tn,[e("stdlib test runner: implement "),Sn,e(" and "),Un,e(" commands to unit tests"),l(n)]),e(", and "),t("a",En,[e("Stdlib: use default color for info log level"),l(n)]),e(", and "),t("a",Cn,[e("stdlib: add "),Dn,e(" command to skip test case"),l(n)])]),t("li",null,[e("amtoine created "),t("a",Fn,[e("refactor the "),Bn,e(" guidelines for "),Ln,l(n)]),e(", and "),t("a",qn,[e("stdlib: fix the "),On,e(" command with integer values"),l(n)]),e(", and "),t("a",jn,[e("FEATURE: do not use theme-independant colors in the default configs"),l(n)]),e(", and "),t("a",Mn,[e("stdlib: make helper modules available in std"),l(n)]),e(", and "),t("a",Vn,[e('remove the "MODULE NOT FOUND" print from the parser'),l(n)]),e(", and "),t("a",Wn,[e("stdlib: refactor into a multi-module library"),l(n)]),e(", and "),t("a",Pn,[e("stdlib: use the loaded library in tests and update "),$n,l(n)]),e(", and "),t("a",zn,[e("stdlib: add completion to "),Gn,e(" commands"),l(n)]),e(", and "),t("a",Jn,[e("FEATURE: make the link in the "),Kn,e(" extra usage an ANSI link"),l(n)]),e(", and "),t("a",Hn,[e("add the standard "),Xn,e(" to the prelude as "),Qn,l(n)]),e(", and "),t("a",Yn,[e("FIX: load the library before anything else"),l(n)]),e(", and "),t("a",Zn,[e("stdlib: make the library a standalone crate"),l(n)])]),t("li",null,[e("vaishaag created "),t("a",el,[e("Fix strange error on unbalanced curly braces"),l(n)]),e(", and "),t("a",tl,[e("Correct error description for unknown external commands"),l(n)])]),t("li",null,[e("bobhy created "),t("a",nl,[ll,e(": Rename --command switch to --test; and likewise in --list output"),l(n)]),e(", and "),t("a",rl,[e("Replace #8824: CONTRIBUTING.md for standard library"),l(n)]),e(", and "),t("a",ol,[e("Pick up fix in dtparse for nanosec truncation noted at bottom of #8337"),l(n)])]),t("li",null,[e("Mehrbod2002 created "),t("a",sl,[e("Apply "),al,e(" to "),hl,l(n)])]),t("li",null,[e("ito-hiroki created "),t("a",il,[e("Change "),ul,e(" not to depend on "),dl,l(n)]),e(", and "),t("a",cl,[e("Fix "),pl,e(" to open "),_l,l(n)]),e(", and "),t("a",gl,[e("Change default config to display failed LAST_EXIT_CODE"),l(n)])]),t("li",null,[e("WindSoilder created "),t("a",fl,[bl,e(": enable trash flag on android and ios platrofm"),l(n)]),e(", and "),t("a",ml,[e("optimize hash md5 for binary input"),l(n)]),e(", and "),t("a",kl,[e("Remove autoprinting of "),vl,e(" loop"),l(n)])]),t("li",null,[e("federicoviscomi created "),t("a",wl,[e("Parser panic for signature with multibyte char for short flag #8821"),l(n)])]),t("li",null,[e("nibon7 created "),t("a",yl,[e("Fix process_range on 32-bit platforms"),l(n)])]),t("li",null,[e("dependabot[bot] created "),t("a",xl,[e("Bump sys-locale from 0.2.4 to 0.3.0"),l(n)]),e(", and "),t("a",Nl,[e("Bump winreg from 0.11.0 to 0.50.0"),l(n)]),e(", and "),t("a",Il,[e("Bump rstest from 0.16.0 to 0.17.0"),l(n)]),e(", and "),t("a",Rl,[e("Bump umask from 2.0.0 to 2.1.0"),l(n)]),e(", and "),t("a",Al,[e("Bump spin from 0.9.5 to 0.9.8"),l(n)]),e(", and "),t("a",Tl,[e("Bump git2 from 0.16.1 to 0.17.0"),l(n)]),e(", and "),t("a",Sl,[e("Bump windows from 0.46.0 to 0.48.0"),l(n)]),e(", and "),t("a",Ul,[e("Bump miette from 5.6.0 to 5.7.0"),l(n)])]),t("li",null,[e("MariaSolOs created "),t("a",El,[e("Add git hooks for formatting and running "),Cl,l(n)]),e(", and "),t("a",Dl,[e("Use "),Fl,e(" in the root crate"),l(n)]),e(", and "),t("a",Bl,[e("Allow arguments for the last flag in short flag batch "),l(n)])]),t("li",null,[e("stormasm created "),t("a",Ll,[e("remove nu_cli crate dependency from nu_std"),l(n)]),e(", and "),t("a",ql,[e("add LICENSE to nu-std"),l(n)])]),t("li",null,[e("kubouch created "),t("a",Ol,[e("Remove old alias implementation"),l(n)]),e(", and "),t("a",jl,[e("Remove parser keywords label from commands that do not need it"),l(n)]),e(", and "),t("a",Ml,[e("Aliasing math expression shows error earlier"),l(n)]),e(", and "),t("a",Vl,[e("Allow multi-word aliases"),l(n)])]),t("li",null,[e("harshalchaudhari35 created "),t("a",Wl,[e("fix(nu-command/tests): further remove unnecessary pipeline() and cwd()"),l(n)])]),t("li",null,[e("Jan9103 created "),t("a",Pl,[e("Update some "),$l,e(" examples"),l(n)])])]),zl,t("ul",null,[t("li",null,[e("fdncred created "),t("a",Gl,[e("change the "),Jl,e(" separator to a record separator "),Kl,l(n)]),e(", and "),t("a",Hl,[e("add folding regions"),l(n)]),e(", and "),t("a",Xl,[e("rename to match readme"),l(n)]),e(", and "),t("a",Ql,[e("update readme"),l(n)]),e(", and "),t("a",Yl,[e("update example generation script and examples"),l(n)]),e(", and "),t("a",Zl,[e("add a throttle timeout so that we don't update to frequently"),l(n)]),e(", and "),t("a",er,[e("add timing to more server functions"),l(n)]),e(", and "),t("a",tr,[e("update vscode launch json so we can see debug messages from client"),l(n)]),e(", and "),t("a",nr,[e("update files to model after jakt"),l(n)]),e(", and "),t("a",lr,[e("limit the amount of errors returned by ide-check"),l(n)]),e(", and "),t("a",rr,[e("respect the setting to enable or disable hints/inlays"),l(n)]),e(", and "),t("a",or,[e("change include dir separator from semicolon to colon"),l(n)]),e(", and "),t("a",sr,[e("revert vscodeignore changes"),l(n)]),e(", and "),t("a",ar,[e("add include dirs setting to extension"),l(n)]),e(", and "),t("a",hr,[e("utilize nushell IDE features with built-in vscode LSP functionality"),l(n)])]),t("li",null,[e("glcraft created "),t("a",ir,[e("Add underscore separator in numbers"),l(n)])]),t("li",null,[e("jntrnr created "),t("a",ur,[e("Have launch build instead of watch"),l(n)]),e(", and "),t("a",dr,[e("Delete tmp file on exit"),l(n)]),e(", and "),t("a",cr,[e("Limit buffer calculation to buffer size not text size"),l(n)]),e(", and "),t("a",pr,[e("Move runCompiler to be in charge of the script include flag"),l(n)]),e(", and "),t("a",_r,[e("Add support for -I call to nushell"),l(n)])])]),gr,t("ul",null,[t("li",null,[e("Ifthel created "),t("a",fr,[e("Use explicit printing in custom_commands.md"),l(n)]),e(", and "),t("a",br,[e("Improve "),mr,e(" and "),kr,e(" examples in working_with_lists.md"),l(n)]),e(", and "),t("a",vr,[e("Update dataframe examples"),l(n)]),e(", and "),t("a",wr,[e("Fix ranges in "),yr,e(" examples"),l(n)])]),t("li",null,[e("amtoine created "),t("a",xr,[e("add the note about the standard library"),l(n)]),e(", and "),t("a",Nr,[e("add a note about #8189 to the 0.77 release"),l(n)])]),t("li",null,[e("kai-tub created "),t("a",Ir,[e("Update standard_library.md"),l(n)])]),t("li",null,[e("hustcer created "),t("a",Rr,[e("Add npm installation instruction"),l(n)]),e(", and "),t("a",Ar,[e("Fix i18n script for nu v0.78"),l(n)]),e(", and "),t("a",Tr,[e("Update some docs for nu v0.78"),l(n)]),e(", and "),t("a",Sr,[e("Refresh commands' docs for nu v0.78"),l(n)])]),t("li",null,[e("MariaSolOs created "),t("a",Ur,[e("Fix some typos and other nits to the variable documentation"),l(n)])]),t("li",null,[e("1Kinoti created "),t("a",Er,[e("update variable documentation"),l(n)])]),t("li",null,[e("rgwood created "),t("a",Cr,[e("Mention optional cell path members"),l(n)])]),t("li",null,[e("presidento created "),t("a",Dr,[e("Dataframes"),l(n)]),e(", and "),t("a",Fr,[e("Update testing chapter"),l(n)])]),t("li",null,[e("maxim-uvarov created "),t("a",Br,[e("fixing typo in 2023-04-04-nushell_0_78.md"),l(n)])]),t("li",null,[e("D3V1LC0D3R created "),t("a",Lr,[e("Update working_with_tables.md to include reject"),l(n)])]),t("li",null,[e("Kissaki created "),t("a",qr,[e("Improve misleading text format on note"),l(n)])]),t("li",null,[e("uselesspseudo created "),t("a",Or,[e("Fix old keybding for help menu"),l(n)])]),t("li",null,[e("efulleratindeed created "),t("a",jr,[e("Fix syntax error in blog post"),l(n)])]),t("li",null,[e("harrysarson created "),t("a",Mr,[e("use || in closures when configuring prompt"),l(n)])]),t("li",null,[e("pingiun created "),t("a",Vr,[e("Remove deprecated str lpad from examples"),l(n)]),e(", and "),t("a",Wr,[e("Update environment.md"),l(n)])]),t("li",null,[e("SamirTalwar created "),t("a",Pr,[e("Update the Direnv recipe to use a block, rather than "),$r,l(n)])])]),zr,t("ul",null,[t("li",null,[e("sholderbach created "),t("a",Gr,[e("Include "),Jr,e(" in the release script"),l(n)])]),t("li",null,[e("fj0r created "),t("a",Kr,[e("prompt powerline suppor color theme"),l(n)]),e(", and "),t("a",Hr,[e("refactor: unified configuration environment variables"),l(n)]),e(", and "),t("a",Xr,[e("prompt"),l(n)]),e(", and "),t("a",Qr,[e("upgrade to 0.78: git, ssh, docker, kubernetes"),l(n)])]),t("li",null,[e("Darkness9724 created "),t("a",Yr,[e("Fix wolframalpha.nu"),l(n)])]),t("li",null,[e("RickCogley created "),t("a",Zr,[e("Enhance by getting length of symbol string"),l(n)]),e(", and "),t("a",eo,[e("Add nupass.nu password generator"),l(n)])]),t("li",null,[e("fdncred created "),t("a",to,[e("update progress meter to work with latest nushell"),l(n)]),e(", and "),t("a",no,[e("update sg.nu to print again"),l(n)]),e(", and "),t("a",lo,[e("some fun iterm2 drawing"),l(n)]),e(", and "),t("a",ro,[e("update range syntax in str substring usage"),l(n)]),e(", and "),t("a",oo,[e("move assets so they're more accessible"),l(n)]),e(", and "),t("a",so,[e("a little cleanup"),l(n)]),e(", and "),t("a",ao,[e("fix some quoting bugs that the lsp found"),l(n)])]),t("li",null,[e("nils-degroot created "),t("a",ho,[e("Added completions for pass"),l(n)])]),t("li",null,[e("D3V1LC0D3R created "),t("a",io,[e("Update nuschiit.nu (used deprecated fetch)"),l(n)]),e(", and "),t("a",uo,[e("a small query web showcase with unscramble.me"),l(n)])]),t("li",null,[e("TuffenDuffen created "),t("a",co,[e("Fix issue with open in yarn completions"),l(n)])]),t("li",null,[e("Hofer-Julian created "),t("a",po,[e("conda: Add "),_o,e(" to closure"),l(n)]),e(", and "),t("a",go,[e("Speeding up activating conda environment"),l(n)])]),t("li",null,[e("fnuttens created "),t("a",fo,[e("Add --all aliases for exa"),l(n)]),e(", and "),t("a",bo,[e("Add exa aliases"),l(n)])]),t("li",null,[e("Kissaki created "),t("a",mo,[e("Fix winget-completions.nu for nushell v0.78 closure syntax change"),l(n)])]),t("li",null,[e("Tiggax created "),t("a",ko,[e("Fixed support for env files"),l(n)])]),t("li",null,[e("amtoine created "),t("a",vo,[e("rewrite the theme generation"),l(n)])])]),wo,t("ul",null,[t("li",null,[e("sholderbach created "),t("a",yo,[e("Bump version for 0.19 release"),l(n)])]),t("li",null,[e("nibon7 created "),t("a",xo,[e("Restore the cursor shape when reedline exits"),l(n)])]),t("li",null,[e("stevenxxiu created "),t("a",No,[e("feat: add "),Io,e(" to return the current insertion point of the input buffer"),l(n)])]),t("li",null,[e("WindSoilder created "),t("a",Ro,[e("support bracketed paste"),l(n)]),e(", and "),t("a",Ao,[e("Update crossterm to version 0.26.1"),l(n)])]),t("li",null,[e("xiuxiu62 created "),t("a",To,[e("re-export crossterm::style::Color for custom prompt implementations"),l(n)])]),t("li",null,[e("fdncred created "),t("a",So,[e("Allow history searching via session id"),l(n)])])])])}const Fo=o(d,[["render",Uo],["__file","2023-04-25-nushell_0_79.html.vue"]]);export{Fo as default};
