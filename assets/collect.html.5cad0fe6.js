import{_ as s,o as t,c as n,a as e,t as r,d as o,e as c}from"./app.9011b7da.js";const l={},p=e("h1",{id:"frontmatter-title",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#"),o(),e("code",null,"{{ $frontmatter.title }}")],-1),i={style:{"white-space":"pre-wrap"}},d=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; collect (block)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>block</code>: the block to run once the stream is collected</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Use the second value in the stream</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token operator">|</span> collect <span class="token punctuation">{</span> <span class="token operator">|</span>x<span class="token operator">|</span> <span class="token builtin class-name">echo</span> <span class="token variable">$x</span>.1 <span class="token punctuation">}</span>
</code></pre></div>`,7);function h(a,u){return t(),n("div",null,[p,e("div",i,r(a.$frontmatter.usage),1),d])}var k=s(l,[["render",h],["__file","collect.html.vue"]]);export{k as default};
